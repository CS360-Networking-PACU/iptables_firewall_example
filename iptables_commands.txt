
# Setup port forwarding in VB to forward host 2222 to guest 2222
# Setup port forwarding in VB to forward host 36022 to guest 22
# Setup port forwarding in VB to forward host 36080 to guest 80


# find ip address in VM
ip addr # (10.0.2.15)


# In Windows start the terminal:
# Windows: CMD
# to find Windows's IP address
ipconfig

# In Windows

ssh punetid@localhost -p 36022

# How does this work?
# open wireshark in VM, tcp.port==22
# look at src and dest addr


 

# Let's setup the webserver

cd /srv/www/htdocs

sudo bash

wget zeus.cs.pacificu.edu/chadd/cs360f21/firewall.html -O index.html

systemctl start apache2
systemctl stop firewalld

# In Windows:
# firefox
# http://localhost:36080




# Let's test ssh!
# In the VM
ssh punetid@10.2.160.6  # gray

ssh punetid@64.59.225.81 # zeus



# Let's see what iptable rules are already in place
# for the filter table
iptables -L -n -v --line-numbers

sudo bash

iptables -L -n -v --line-numbers



# Let's drop TCP traffic leaving your VM with a destination port of 22
iptables -A OUTPUT -p tcp --dport 22 -j DROP



# Let's see if that worked.
ssh punetid@10.2.160.6  # gray
ssh punetid@64.59.225.81 # zeus

# delete the rule we just added
iptables -D OUTPUT 1


# just block access to zeus via ssh
iptables -A OUTPUT -p tcp --dport 22 -d 64.59.225.81 -j DROP


ssh punetid@10.2.160.6  # gray
ssh punetid@64.59.225.81 # zeus


# delete the rule we just added
iptables -D OUTPUT 1


# Let's log each new ssh connection to zeus

iptables -A OUTPUT -p tcp -d 64.59.225.81  --dport 22 -j LOG --log-prefix "NEW zeus:22" --log-level 7 -m state --state NEW


# read the log
journalctl -r

# follow the journal in a new terminal
journalctl -f



# Let's log and drop a packet.
iptables -A OUTPUT -p tcp -d 64.59.225.81 --dport 22  -j LOG --log-prefix "DROP zeus:22" --log-level 7
iptables -A OUTPUT -p tcp -d 64.59.225.81 --dport 22  -j DROP

# test
ssh 64.59.225.81


# Add another log rule:
iptables -A OUTPUT -p tcp -d 64.59.233.197 --dport 22  -j LOG --log-prefix "DROPPED zeus:22" --log-level 7

# test
ssh 64.59.225.81


# Flush all the newly added rules

iptables -F OUTPUT


# remember the echo server
ncat -l 8008 --keep-open --exec "/bin/cat"
telnet 127.0.0.1 8008


# application based filtering
iptables -A OUTPUT -p tcp --sport 80 -m cgroup ! --path system.slice/apache2.service -j LOG --log-prefix "DROP from port 80" --log-tcp-sequence --log-level 7

iptables -A OUTPUT -p tcp --sport 80 -m cgroup ! --path system.slice/apache2.service -j DROP


# try firefox from Windows again
# firefox
# http://localhost:36080

# turn off the web server
systemctl stop apache2

# run the echo server on port 80
sudo ncat -l 80 --keep-open --exec "/bin/cat"
telnet 127.0.0.1 80


#  Flush all the newly added rules
iptables -F OUTPUT


# mangle the TTL
iptables -t mangle -A OUTPUT -j TTL --ttl-set 32 -p tcp -d 64.59.225.81 --dport 22
iptables -t mangle -A OUTPUT -p tcp -d 64.59.225.81 --dport 22  -j LOG --log-prefix "mangle TTL" --log-tcp-sequence --log-level 7


ssh 64.59.225.81

# Remove that rule (and don't ever mangle your TTL!)
iptables -t mangle -F OUTPUT



# Let's rewrite the PORT in a packet.
iptables -t nat -A PREROUTING -i eth0 -p tcp --dport 2222 -j REDIRECT --to-port 22


# In Windows
ssh punetid@localhost -p 2222

# Let's see what is going on.
wireshark

filter: tcp.port==22 || tcp.port==2222

# In the VM:
ssh punetid@localhost -p 2222

# drop that rule
iptables -t nat -D PREROUTING 1



# Let's rewrite the PORT in outgoing packet.
iptables -t nat -A OUTPUT   -p tcp --dport 2223 -j REDIRECT --to-port 22


# In the VM:
ssh punetid@localhost -p 2223

ssh punetid@64.59.225.81 -p 2223

# Delete that rule
iptables -t nat -D OUTPUT 1




# simple firewall to ONLY allow SSH in and out
# adapted from:
# https://www.cyberciti.biz/tips/linux-iptables-4-block-all-incoming-traffic-but-allow-ssh.html

iptables -F
iptables -X
iptables -P INPUT DROP
iptables -P OUTPUT DROP
iptables -P FORWARD DROP
iptables -L -n -v --line-numbers

# test
ssh punetid@zeus.cs.pacificu.edu

iptables -A INPUT -i lo -j ACCEPT
iptables -A OUTPUT -o lo -j ACCEPT

iptables -A INPUT -p tcp -s 0/0 --sport 22  -j ACCEPT
iptables -A OUTPUT -p tcp -d 0/0 --dport 22  -j ACCEPT


# test
ssh punetid@64.59.225.81
ssh punetid@zeus.cs.pacificu.edu
dig zeus.cs.pacificu.edu


iptables -A INPUT -p udp -s 0/0 --sport 53  -j ACCEPT
iptables -A OUTPUT -p udp -d 0/0 --dport 53  -j ACCEPT




# test
ssh punetid@64.59.225.81
ssh punetid@zeus.cs.pacificu.edu
dig zeus.cs.pacificu.edu


# reset
iptables -X
iptables -F
iptables -P INPUT ACCEPT
iptables -P OUTPUT ACCEPT
iptables -P FORWARD ACCEPT

